# reusable YAML variables
x-broker-url: &broker-url "redis://:${REDIS_PASSWORD}@redis:6379/0"

x-base-setup: &base-setup
  build: ./src
  restart: always
  env_file: src/.env.prod
  environment:
    CELERY_BROKER_URL: *broker-url
    CELERY_RESULT_BACKEND: *broker-url

volumes:
  crawls:

name: "auto-archiver-api"
services:
  web:
    <<: *base-setup
    ports:
      - "127.0.0.1:8004:8000"
    command: uvicorn main:app --host 0.0.0.0 --reload
    volumes:
      - ./src:/app
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    <<: *base-setup
    command: celery --app=worker.celery worker --loglevel=info --logfile=logs/celery.log
    volumes:
      - ./src:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - crawls:/crawls # BROWSERTRIX_HOME_HOST:BROWSERTRIX_HOME_CONTAINER, do not change /crawls
    environment:
      # celery broker-url needs to be duplicated here, do not remove
      CELERY_BROKER_URL: *broker-url
      CELERY_RESULT_BACKEND: *broker-url
      WACZ_ENABLE_DOCKER: 1 # Enable calling docker from this container
      BROWSERTRIX_HOME_HOST: auto-archiver-api_crawls
      BROWSERTRIX_HOME_CONTAINER: /crawls
    depends_on:
      - web
      - redis
    healthcheck:
      test: ["CMD", "pipenv", "run", "celery", "-A", "worker.celery", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:6-alpine
    restart: always
    command: redis-server /conf/redis.conf --requirepass ${REDIS_PASSWORD}
    volumes:
      - "./redis/data:/data"
      - "./redis/config:/conf"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3